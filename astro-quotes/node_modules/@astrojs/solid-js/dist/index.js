function getRenderer() {
  return {
    name: "@astrojs/solid-js",
    clientEntrypoint: "@astrojs/solid-js/client.js",
    serverEntrypoint: "@astrojs/solid-js/server.js",
    jsxImportSource: "solid-js",
    jsxTransformOptions: async ({ ssr }) => {
      const [{ default: solid }] = await Promise.all([import("babel-preset-solid")]);
      const options = {
        presets: [solid({}, { generate: ssr ? "ssr" : "dom", hydratable: true })],
        plugins: [],
        inputSourceMap: false
      };
      return options;
    }
  };
}
function getViteConfiguration(isDev) {
  const nestedDeps = ["solid-js", "solid-js/web", "solid-js/store", "solid-js/html", "solid-js/h"];
  return {
    esbuild: { include: /\.ts$/ },
    resolve: {
      conditions: ["solid", ...isDev ? ["development"] : []],
      dedupe: nestedDeps,
      alias: [{ find: /^solid-refresh$/, replacement: "/@solid-refresh" }]
    },
    optimizeDeps: {
      include: nestedDeps,
      exclude: ["@astrojs/solid-js/server.js"]
    },
    ssr: {
      external: ["babel-preset-solid"]
    }
  };
}
function src_default() {
  return {
    name: "@astrojs/solid-js",
    hooks: {
      "astro:config:setup": ({ command, addRenderer, updateConfig }) => {
        addRenderer(getRenderer());
        updateConfig({ vite: getViteConfiguration(command === "dev") });
      }
    }
  };
}
export {
  src_default as default
};
